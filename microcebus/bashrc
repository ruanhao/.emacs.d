#! /bin/bash

### CONSTANTS ###
NORMAL="\e[0m"
WHITE="\e[0;37m"
WHITE_BOLD="\e[1;37m"
RED="\e[0;31m"
RED_BOLD="\e[1;31m"
GREEN="\e[0;32m"
GREEN_BOLD="\e[1;32m"
YELLOW="\e[0;33m"
YELLOW_BOLD="\e[1;33m"
BLUE="\e[0;34m"
BLUE_BOLD="\e[1;34m"
MAGENTA="\e[0;35m"
MAGENTA_BOLD="\e[1;35m"
CYAN="\e[0;36m"
CYAN_BOLD="\e[1;36m"

### FUNCTIONS ###
function showcolor() {
    RGB=( 000000 800000 008000 808000 000080 800080 008080 c0c0c0 808080 ff0000 00ff00 ffff00 0000ff ff00ff 00ffff ffffff 000000 00005f 000087 0000af 0000d7 0000ff 005f00 005f5f 005f87 005faf 005fd7 005fff 008700 00875f 008787 0087af 0087d7 0087ff 00af00 00af5f 00af87 00afaf 00afd7 00afff 00d700 00d75f 00d787 00d7af 00d7d7 00d7ff 00ff00 00ff5f 00ff87 00ffaf 00ffd7 00ffff 5f0000 5f005f 5f0087 5f00af 5f00d7 5f00ff 5f5f00 5f5f5f 5f5f87 5f5faf 5f5fd7 5f5fff 5f8700 5f875f 5f8787 5f87af 5f87d7 5f87ff 5faf00 5faf5f 5faf87 5fafaf 5fafd7 5fafff 5fd700 5fd75f 5fd787 5fd7af 5fd7d7 5fd7ff 5fff00 5fff5f 5fff87 5fffaf 5fffd7 5fffff 870000 87005f 870087 8700af 8700d7 8700ff 875f00 875f5f 875f87 875faf 875fd7 875fff 878700 87875f 878787 8787af 8787d7 8787ff 87af00 87af5f 87af87 87afaf 87afd7 87afff 87d700 87d75f 87d787 87d7af 87d7d7 87d7ff 87ff00 87ff5f 87ff87 87ffaf 87ffd7 87ffff af0000 af005f af0087 af00af af00d7 af00ff af5f00 af5f5f af5f87 af5faf af5fd7 af5fff af8700 af875f af8787 af87af af87d7 af87ff afaf00 afaf5f afaf87 afafaf afafd7 afafff afd700 afd75f afd787 afd7af afd7d7 afd7ff afff00 afff5f afff87 afffaf afffd7 afffff d70000 d7005f d70087 d700af d700d7 d700ff d75f00 d75f5f d75f87 d75faf d75fd7 d75fff d78700 d7875f d78787 d787af d787d7 d787ff d7af00 d7af5f d7af87 d7afaf d7afd7 d7afff d7d700 d7d75f d7d787 d7d7af d7d7d7 d7d7ff d7ff00 d7ff5f d7ff87 d7ffaf d7ffd7 d7ffff ff0000 ff005f ff0087 ff00af ff00d7 ff00ff ff5f00 ff5f5f ff5f87 ff5faf ff5fd7 ff5fff ff8700 ff875f ff8787 ff87af ff87d7 ff87ff ffaf00 ffaf5f ffaf87 ffafaf ffafd7 ffafff ffd700 ffd75f ffd787 ffd7af ffd7d7 ffd7ff ffff00 ffff5f ffff87 ffffaf ffffd7 ffffff 080808 121212 1c1c1c 262626 303030 3a3a3a 444444 4e4e4e 585858 626262 6c6c6c 767676 808080 8a8a8a 949494 9e9e9e a8a8a8 b2b2b2 bcbcbc c6c6c6 d0d0d0 dadada e4e4e4 eeeeee )
    for row in {0..15}; do
	for col in {0..15}; do
	    code=$(( row * 16 + col ))
	    printf "\e[38;05;${code}m %s" "${RGB[code]}"
	done
	echo
    done
    echo -ne "\e[0m"
}

function pick_color() {
    if [[ $? = 0 ]]; then
	echo ":)" > /tmp/bash.face
	echo -e "\e[1;36m"
    else
	echo ":(" > /tmp/bash.face
	echo -e "\e[1;35m"
    fi
}

function get_face() {
    cat /tmp/bash.face
}

function parse_git_branch {
   git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

function setup_workspace() {
    rm -rf lib.[ch] def.h >/dev/null 2>&1
    cp ~/.emacs.d/yasnippet/snippets/c-mode/*.[ch] ./
}

function busy() {
    cat /dev/urandom | hexdump -C | grep "ca fe"
}


function cpuinfo() {
    echo '===== CPU Topology Table ====='
    echo
    echo '+--------------+---------+-----------+'
    echo '| Processor ID | Core ID | Socket ID |'
    echo '+--------------+---------+-----------+'
    while read line; do
	if [ -z "$line" ]; then
            printf '| %-12s | %-7s | %-9s |\n' $p_id $c_id $s_id
            echo '+--------------+---------+-----------+'
            continue
	fi

	if echo "$line" | grep -q "^processor"; then
            p_id=`echo "$line" | awk -F: '{print $2}' | tr -d ' '`
	fi

	if echo "$line" | grep -q "^core id"; then
            c_id=`echo "$line" | awk -F: '{print $2}' | tr -d ' '`
	fi

	if echo "$line" | grep -q "^physical id"; then
            s_id=`echo "$line" | awk -F: '{print $2}' | tr -d ' '`
	fi
    done < /proc/cpuinfo
    echo
    awk -F: '{
    if ($1 ~ /processor/) {
        gsub(/ /,"",$2);
        p_id=$2;
    } else if ($1 ~ /physical id/){
        gsub(/ /,"",$2);
        s_id=$2;
        arr[s_id]=arr[s_id] " " p_id
    }
}

END{
    for (i in arr)
        printf "Socket%s: %s", i, arr[i];
}' /proc/cpuinfo

    echo
    echo '===== CPU Info Summary ====='
    nr_processor=`grep '^processor' /proc/cpuinfo | wc -l`
    echo "Logical processors: $nr_processor"

    nr_socket=`grep 'physical id' /proc/cpuinfo | awk -F: '{print $2 | "sort -un"}' | wc -l`
    echo "Physical socket: $nr_socket"

    nr_siblings=`grep 'siblings' /proc/cpuinfo | awk -F: '{print $2 | "sort -un"}'`
    echo "Siblings in one socket: $nr_siblings"

    nr_cores=`grep 'cpu cores' /proc/cpuinfo | awk -F: '{print $2 | "sort -un"}'`
    echo "Cores in one socket: $nr_cores"

    let nr_cores*=nr_socket
    echo "Cores total: $nr_cores"

    if [ "$nr_cores" = "$nr_processor" ]; then
	echo "Hyper-Threading: off"
    else
	echo "Hyper-Threading: on"
    fi

    echo '============================'
}


### EXPORT ###
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TERM=xterm-256color
export PS1="\[$NORMAL\]\[\$(pick_color)\]\$(get_face)\[$BLUE_BOLD\][\A]\[$GREEN_BOLD\]\u:\[$RED_BOLD\]\w\[$YELLOW_BOLD\]\$(parse_git_branch)\[$WHITE_BOLD\] > \[$NORMAL\]"
export HISTTIMEFORMAT="%F %T "
# export LD_LIBRARY_PATH="~/local/libevent-2.0.21/lib:$LD_LIBRARY_PATH"

### ALIAS ###
alias grep='grep --color=auto --line-buffered'
alias ll='ls -lh --color=auto'
alias ec='emacs -nw'
alias dirs='dirs -v'
alias gcc='gcc -g -rdynamic -lpthread `pkg-config --cflags --libs glib-2.0`'
alias cde='cd ~/.emacs.d'
alias cdk='/lib/modules/$(uname -r)/kernel'
alias j='jobs -l'
# alias diff='diff -Naur'
# alias patch='patch -b'



# echo '"\C-p": history-search-backward' >> ~/.inputrc
# bind -f ~/.inputrc

if [[ -n $DISPLAY ]]; then
    # Load the user's own X resource settings
    [[ -r $HOME/.Xresources ]] && xrdb $HOME/.Xresources
fi
